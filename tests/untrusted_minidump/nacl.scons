# -*- python -*-
# Copyright (c) 2013 The Native Client Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

Import('env')

# Preserve debugging info (which is not ABI-stable under PNaCl).
if not env.AllowNonStableBitcode():
  Return()

if env.Bit('bitcode'):
  # With the PNaCl toolchain, special flags are required to get a build ID.
  env.Append(LINKFLAGS=['--pnacl-allow-nexe-build-id'])
  if env.Bit('pnacl_generate_pexe'):
    env.Append(TRANSLATEFLAGS=['--build-id'])
  else:
    env.Append(LINKFLAGS=['--pnacl-allow-native', '-Wn,--build-id'])

env['COMPONENT_STATIC'] = not env.Bit('nacl_glibc')
env.ComponentLibrary('minidump_test_lib', 'minidump_test_lib.c')
nexe = env.ComponentProgram(
    'minidump_test', 'minidump_test.c',
    EXTRA_LIBS=['minidump_test_lib', 'minidump_generator',
                '${NONIRT_LIBS}', '${EXCEPTION_LIBS}', '${PTHREAD_LIBS}'])

for crash_in_lib in [0, 1]:
  for modules_live in [0, 1]:
    name = 'minidump'
    if crash_in_lib:
      name += '_crash_in_lib'
    if modules_live:
      name += '_modules_live'
    name += '_test'
    # Note that this doesn't check the crash dump that is produced yet.
    # TODO(mseaborn): Test that Breakpad can extract a stack backtrace.
    output_dump_file = env.File(name + '.dmp')
    node = env.CommandSelLdrTestNacl(
        name + '.out', nexe,
        [output_dump_file.abspath, str(crash_in_lib), str(modules_live)],
        declares_exit_status=True,
        sel_ldr_flags=['-e', # Enable exception handling for catching crash
                       '-a', # Enable file access for writing minidump file
                      ])
    env.AddNodeToTestSuite(node,
                           ['small_tests', 'exception_tests', 'nonpexe_tests'],
                           'run_' + name,
                           # Nexe build IDs are not available under the
                           # sandboxed PNaCl translator.
                           is_broken=env.Bit('use_sandboxed_translator'))
