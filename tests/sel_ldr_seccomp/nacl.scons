# -*- python -*-
# Copyright (c) 2013 The Native Client Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import platform

Import('env')

if 'TRUSTED_ENV' not in env:
  Return()
trusted_env = env['TRUSTED_ENV']

if not trusted_env.Bit('linux') or not trusted_env.Bit('build_x86_64'):
  Return()

# This is a lame detection if seccomp bpf filters are supported by the kernel.
# We suppose that any Linux kernel v3.2+ supports it, but it is only true
# for Ubuntu kernels. Seccomp BPF filters reached the mainline at 3.5,
# so this check will be wrong on some relatively old non-Ubuntu Linux distros.
kernel_version = map(int, platform.release().split('.', 2)[:2])
if kernel_version < [3, 2]:
  Return()

# This test uses a nexe built by another test.  Nexes do not get
# staged in pexe mode, so only run this test in nonpexe mode.
if env.Bit('pnacl_generate_pexe'):
  Return()

node = env.CommandSelLdrTestNacl(
    'sel_ldr_seccomp_test.out',
    env.File('${STAGING_DIR}/hello_world.nexe'),
    stdout_golden=env.File('../hello_world/hello_world.stdout'),
    track_cmdtime='1',
    loader=trusted_env.GetSelLdrSeccomp())

env.AddNodeToTestSuite(node, ['small_tests', 'nonpexe_tests'],
                       'run_sel_ldr_seccomp_test')
