# Copyright (c) 2014 The Native Client Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//native_client/build/config/sysroot.gni")
import("//native_client/build/toolchain/gcc_toolchain.gni")
import("//native_client/build/toolchain/nacl_toolchain.gni")

nacl_toolchain("newlib_arm") {
  package = "nacl_arm_newlib"
  toolchain_cpu_arch = "arm"
  toolprefix = "toolchain/${os}_x86/nacl_arm_newlib/bin/arm-nacl-"

  cc = "gcc"
  cxx = "g++"
  ar = "ar"
  ld = cxx
}

nacl_toolchain("newlib_x86") {
  package = "nacl_x86_newlib"
  toolchain_cpu_arch = "x86"
  toolprefix = "toolchain/${os}_x86/nacl_x86_newlib/bin/i686-nacl-"

  cc = "gcc"
  cxx = "g++"
  ar = "ar"
  ld = cxx
}

nacl_toolchain("newlib_x64") {
  package = "nacl_x86_newlib"
  toolchain_cpu_arch = "x64"
  toolprefix = "toolchain/${os}_x86/nacl_x86_newlib/bin/x86_64-nacl-"

  cc = "gcc"
  cxx = "g++"
  ar = "ar"
  ld = cxx
}

nacl_toolchain("glibc_x86") {
  package = "nacl_x86_glibc"
  toolchain_cpu_arch = "x86"
  toolprefix = "toolchain/${os}_x86/nacl_x86_glibc/bin/i686-nacl-"

  cc = "gcc"
  cxx = "g++"
  ar = "ar"
  ld = cxx
}

nacl_toolchain("glibc_x64") {
  package = "nacl_x86_glibc"
  toolchain_cpu_arch = "x64"
  toolprefix = "toolchain/${os}_x86/nacl_x86_glibc/bin/x86_64-nacl-"

  cc = "gcc"
  cxx = "g++"
  ar = "ar"
  ld = cxx
}

# A fake toolchain to namespace the toolchain prep.
# Doing toolchain prep inside a non-default toolchain prevents it from becoming
# a default target, which means that it will only trigger if explicitly depended
# upon.
gcc_toolchain("toolchain_prep") {
  cc = "clang"
  cxx = "clang++"
  ar = "ar"
  ld = cxx
  toolchain_cpu_arch = cpu_arch
  toolchain_os = os
}
